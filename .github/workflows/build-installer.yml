name: Installer build

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

# When setting the java version, always use x.y.z even if there's more numbers, otherwise @setup-java will fail.

jobs:
  build-windows-installer-msi:
    name: Build Windows installer (MSI)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle
        uses: gradle/actions/wrapper-validation@v4

      - name: Setup JDK 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: .\gradlew.bat jpackage

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: ./app/build/dist/Xeres-*.msi
          name: windows-installer-msi
          retention-days: 1

  build-windows-installer-portable:
    name: Build Windows installer (Portable)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle
        uses: gradle/actions/wrapper-validation@v4

      - name: Setup JDK 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: .\gradlew.bat jpackage -P"jpackage.portable=true"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: ./app/build/dist/Xeres-*.zip
          name: windows-installer-portable
          retention-days: 1

  build-linux-installer-deb:
    name: Build Linux installer (DEB)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle
        uses: gradle/actions/wrapper-validation@v4

      - name: Setup JDK 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: ./gradlew jpackage

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: ./app/build/dist/xeres_*.deb
          name: linux-installer-deb
          retention-days: 1

  #  build-macos-installer: (needs updating... see above)
  #    name: Build MacOS installer
  #    runs-on: macos-latest
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v4
  #      - name: Validate Gradle
  #        uses: gradle/wrapper-validation-action@v3
  #      - name: Set up JDK 21
  #        uses: actions/setup-java@v4
  #        with:
  #          java-version: '21'
  #          distribution: 'temurin'
  #      - name: Build
  #        uses: gradle/actions/setup-gradle@v4
  #        with:
  #          arguments: jpackage --no-configuration-cache
  #      - name: Upload artifact
  #        uses: actions/upload-artifact@v4
  #        with:
  #          path: ./app/build/dist/Xeres-*.dmg
  #          name: macos-installer
  #          retention-days: 1

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [ build-windows-installer-msi, build-windows-installer-portable, build-linux-installer-deb ]
    steps:
      - name: Download Windows installer (MSI)
        uses: actions/download-artifact@v4
        with:
          name: windows-installer-msi

      - name: Download Windows installer (Portable)
        uses: actions/download-artifact@v4
        with:
          name: windows-installer-portable

      - name: Download Linux installer (DEB)
        uses: actions/download-artifact@v4
        with:
          name: linux-installer-deb
      #      - name: Download MacOS installer
      #        uses: actions/download-artifact@v4
      #        with:
      #          name: macos-installer

      - name: Generate checksum
        uses: jmgilman/actions-generate-checksum@v1
        with:
          patterns: |
            *.exe
            *.msi
            *.deb
            *.rpm
            *.dmg
            *.zip

      - name: Create Github release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          draft: true
          files: |
            checksum.txt
            *.exe
            *.msi
            *.deb
            *.rpm
            *.dmg
            *.zip

# For manual builds, add automatic_release_tag: "Nightly" above
