name: Installer build

on:
  workflow_dispatch:

jobs:
  build-windows-installer:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build
      uses: gradle/gradle-build-action@v2.1.3
      with:
        arguments: jpackage
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        path: ./app/build/dist/Xeres-*.exe
        name: windows-installer
        retention-days: 1

  build-linux-installer:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build
      uses: gradle/gradle-build-action@v2.1.3
      with:
        arguments: jpackage
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        path: ./app/build/dist/xeres_*.deb
        name: linux-installer
        retention-days: 1

  #  build-macos-installer:
  #    runs-on: macos-latest
  #    steps:
  #    - name: Checkout
  #      uses: actions/checkout@v2
  #    - name: Set up JDK 17
  #      uses: actions/setup-java@v2
  #      with:
  #        java-version: '17'
  #        distribution: 'temurin'
  #    - name: Build
  #      uses: gradle/gradle-build-action@v2.1.3
  #      with:
  #        arguments: jpackage
  #    - name: Upload artifact
  #      uses: actions/upload-artifact@v2
  #      with:
  #        path: ./app/build/dist/Xeres-*.dmg
  #        name: macos-installer
  #        retention-days: 1

  # Following is not ready yet. Basically find replacements for actions/upload-artifact and actions/upload-release-asset
  # It needs wildcard support for the asset_path/name (or a way to find the name and pass it down). Maybe ask gradle to do that
  # Or just release manually
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [ build-windows-installer, build-linux-installer ]
    steps:
    - name: Download Windows installer
      uses: actions/download-artifact@v2
      with:
        name: windows-installer
    - name: Download Linux installer
      uses: actions/download-artifact@v2
      with:
        name: linux-installer
    - name: Create Github release
      uses: marvinpinto/action-automatic-releases@1.2.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        draft: true
        files: |
          *.exe
          *.deb

#    - name: Create Github release
#      uses: actions/create-release@latest
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: release-${{ github.sha }}
#        release_name: release-${{ github.sha }}
#        draft: true
#        prerelease: true
#    - name: Release Windows installer
#      uses: actions/upload-release-asset@latest
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create-release.outputs.upload_url }}
#        asset_path: Xeres-0.2.0.exe
#        asset_name: Xeres-foo
#        asset_content_type: application/x-binary
#    - name: Release Linux installer
#      uses: actions/upload-release-asset@latest
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create-release.outputs.upload_url }}
#        asset_path: xeres_0.2.0.deb
#        asset_name: Xeres-foo
#        asset_content_type: application/x-binary
